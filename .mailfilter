#!/usr/bin/perl

use strict;
use warnings;
use Email::Simple;
use Email::Filter;
use Email::Send;
use Mail::ListDetector;
use Mail::SpamAssassin;

my $mail = Email::Filter->new;
if ( $mail->from =~ /^MAILER-DAEMON\@/ ) {
    $mail->ignore;
}

spam_check( $mail );
list_check( $mail );
archive( $mail );

$mail->accept;

sub spam_check {
    my $mail   = shift;
    my $sa     = Mail::SpamAssassin->new;
    my $status = $sa->check( $sa->parse( $mail->simple->as_string ) );
    $mail->simple( Email::Simple->new( $status->rewrite_mail ) );
    if ( $status->is_spam ) {
        $mail->accept( '~/spam' );
    }
}

sub list_check {
    my $mail = shift;
    if ( my $list = Mail::ListDetector->new( $mail->simple ) ) {
        $mail->simple->header_set( 'X-Identified-List',
            $list->listname );
    }
}

sub clone_simple { Email::Simple->new( shift->as_string ) }

sub forward {
    my ( $mail, $to ) = @_;
    my $fwd = clone_simple( $mail->simple );
    $fwd->header_set( 'X-Original-To', $fwd->header( 'To' ) );
    $fwd->header_set( 'To',            $to );

    my $sender = Email::Send->new( { mailer => 'SMTP' } );
    $sender->mailer_args( [ Host => 'post.hexten.net' ] );
    $sender->send( $fwd );
}

sub archive {
    my $mail = shift;
    my $archive_to
      = $mail->header( 'X-Identified-List' )
      ? 'hextenlists@gmail.com'
      : 'hexten@gmail.com';
    forward( $mail, $archive_to );
}

__END__

:0fw
* < 256000
| spamc

:0:
* ^X-Spam-Flag: YES
$HOME/spam

:0c
{
        :0
        * ^Mailing-List:
        ! hextenlists@gmail.com

        :0
        * ^Sender: Majordomo
        ! hextenlists@gmail.com

        :0
        * ^X-Topica-Id:
        ! hextenlists@gmail.com

	:0
	* ^List-Id:
	! hextenlists@gmail.com

	:0
	* ^X-Mailing-List:
	! hextenlists@gmail.com

	:0
	* ^From: MAILER-DAEMON@
	/dev/null

	:0
	! hexten@gmail.com	
}
