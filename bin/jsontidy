#!/usr/bin/env node

"use strict";

const fs = require("fs");

function getStdin(stdin) {
  const result = [];
  let length = 0;

  return new Promise(resolve => {
    stdin.on('readable', () => {
      let chunk;
      while ((chunk = stdin.read())) {
        result.push(chunk);
        length += chunk.length;
      }
    });

    stdin.on('end', () => {
      resolve(Buffer.concat(result, length));
    });
  });
}

function pretty(json) {
  return JSON.stringify(JSON.parse(json), null, 2);
}

if (process.argv.length > 2) {
  for (const file of process.argv.slice(2)) {
    try {
      const buf = fs.readFileSync(file);
      console.log(pretty(buf.toString()));
    } catch (e) {
      console.error(e.message);
      process.exit(1);
    }
  }
} else {
  getStdin(process.stdin).then(buf => {
    console.log(pretty(buf.toString()));
  }).catch(e => {
    console.error(e.message);
    process.exit(1);
  });;
}


// vim:ts=2:sw=2:sts=2:et:ft=javascript
