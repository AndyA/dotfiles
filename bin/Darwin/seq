#!/alt/local/bin/perl

use 5.10.0;
use strict;
use warnings;
use Getopt::Long;
use List::Util qw( max );

my $FORMAT    = '%g';
my $SEPARATOR = "\n";
my $PAD       = 0;

s/^-(\d)/!$1/ for @ARGV;    # Nasty

GetOptions(
    'f|format=s'    => \$FORMAT,
    's|separator=s' => \$SEPARATOR,
    'w|equal-width' => \$PAD
) or usage();

s/^!(\d)/-$1/ for @ARGV;    # Equally nasty

my $last  = pop @ARGV;
my $first = shift @ARGV // 1;
my $incr  = shift @ARGV // 1;

# Will it terminate?
exit if $incr == 0;
exit
  if $last != $first
      && ( ( ( $last - $first ) < 0 ) ^ ( $incr < 0 ) );

my @list = ();
if ( $incr > 0 ) {
    for ( my $i = $first; $i <= $last; $i += $incr ) {
        push @list, $i;
    }
}
else {
    for ( my $i = $first; $i >= $last; $i += $incr ) {
        push @list, $i;
    }
}

if ( $PAD ) {
    # -w tramples on -f
    my $width = max map { length sprintf '%d', $_ } $list[0], $list[-1];
    $FORMAT = "%0${width}d";
}

print join( $SEPARATOR, map { sprintf $FORMAT, $_ } @list ), "\n";

sub usage {
    die "Usage: seq [options] [FIRST] [INCREMENT] LAST\n";
}

