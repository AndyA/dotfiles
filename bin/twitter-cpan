#!/usr/bin/perl

use strict;
use warnings;
use Net::Twitter;
use RDF::Simple::Parser;
use LWP::Simple;
use HTTP::Date;
use Storable;
use Data::Dumper;

$| = 1;

my $LATEST = 'http://search.cpan.org/uploads.rdf';
my $STORE  = './twitter-cpan.store';

my %EXTRACT = (
  'http://purl.org/rss/1.0/title'           => 'title',
  'http://purl.org/rss/1.0/link'            => 'link',
  'http://purl.org/rss/1.0/description'     => 'description',
  'http://purl.org/dc/elements/1.1/creator' => 'creator',
  'http://purl.org/dc/elements/1.1/date'    => 'date',
);

my $feed    = LWP::Simple::get( $LATEST );
my $parser  = RDF::Simple::Parser->new( base => $LATEST );
my @triples = $parser->parse_rdf( $feed );

my $prev = -f $STORE ? retrieve( $STORE ) : {};
my $dir = {};

for my $tri ( @triples ) {
  my ( $key, $type, $value ) = @$tri;
  if ( my $field = $EXTRACT{$type} ) {
    $dir->{$key}{$field} = $value;
  }
}

my @keys = map { $_->[0] }
 sort { $a->[1] <=> $b->[1] }
 grep { defined $_->[1] }
 map { [ $_, str2time( $dir->{$_}->{date} ) ] } keys %$dir;

my %LIKE = (
  'http://search.cpan.org/~jfriedl/Yahoo-Search-1.9.12/' => {
    'link'    => 'http://search.cpan.org/~jfriedl/Yahoo-Search-1.9.12/',
    'creator' => 'Jeffrey Friedl',
    'date'    => '2007-03-20T03:14+00:00',
    'title'   => 'Yahoo-Search-1.9.12',
    'description' => 'Perl interface to the Yahoo! Search public API. '
  },
);

my $twit
 = Net::Twitter->new( username => 'cpan', password => 'twinkle57' );

for my $key ( @keys ) {
  next if exists $prev->{$key};
  my $dist = $dir->{$key};

  # Shite
  next if $dist->{title} eq 'search.cpan.org';
  my $desc = $dist->{title} . ' by ' . $dist->{creator};
  $twit->update( $desc );
}

store( $dir, $STORE );
