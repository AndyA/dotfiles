#!/usr/bin/env perl

use strict;
use warnings;

use File::Spec;

use constant HOMEHOSTS => '~/.ripley';

my @hosts = gethosts();

my %by_dir = ();
my $home   = glob '~';
my $DryRun = 0;

# rsync options that take args
my %warg = map { $_ => 1 } qw(
 --address --backup-dir --block-size --bwlimit --checksum-seed
 --chmod --compare-dest --compress-level --config --contimeout
 --copy-dest --exclude --exclude-from --files-from --filter
 --iconv --include --include-from --link-dest --log-file
 --log-file-format --max-delete --max-size --min-size
 --modify-window --only-write-batch --out-format --partial-dir
 --password-file --port --protocol --read-batch --rsh
 --rsync-path --skip-compress --sockopts --suffix --temp-dir
 --timeout --write-batch -B -T -e -f
);

my ( @switches, @args );
while ( defined( my $a = shift ) ) {
  if ( $a eq '--dont' ) {
    $DryRun++;
    next;
  }
  if ( $a =~ /^-/ ) {
    push @switches, $a;
    push @switches, shift if $warg{$a};
    next;
  }
  push @args, $a;
}

for my $obj ( @args ) {
  $obj = File::Spec->rel2abs( $obj );
  $obj =~ s{/$}{} if -d $obj;
  $obj =~ s{^\Q$home}{~};
  my ( $dir, $leaf )
   = ( $obj =~ m{(.+)/([^/]+)$} )
   ? ( $1, $2 )
   : ( '.', $obj );
  $by_dir{$dir}{$leaf}++;
}

for my $host ( @hosts ) {
  for my $dir ( sort keys %by_dir ) {
    my @obj = map { "$dir/$_" } sort keys %{ $by_dir{$dir} };
    my $cmd = join ' ', 'rsync', @switches, @obj, "$host:$dir";
    print "  $cmd\n";
    system $cmd unless $DryRun;
  }
}

sub gethosts {
  open my $hh, '<', glob HOMEHOSTS
   or die "Can't read ", HOMEHOSTS, ": $!\n";
  my $hosts = do { local $/; <$hh> };
  die "Huh? ($hosts)\n" unless $hosts =~ /^HOSTS="([^"]*)"/;
  return split /\s+/, $1;
}

# vim:ts=2:sw=2:sts=2:et:ft=perl

