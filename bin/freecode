#!/usr/bin/env perl

use strict;
use warnings;

use Config::Tiny;
use Data::Dumper;
use Getopt::Long;
use LWP::UserAgent;
use JSON::XS;

use constant CONFIG => glob '~/.freecode';
use constant BASE   => 'http://freecode.com/';

sub api(@);

my $C = Config::Tiny->read( CONFIG )
 || die Config::Tiny->errstr;

my $apache = api GET => '/projects/apache';
print Dumper( $apache );

sub api(@) {
  my ( $verb, $resource, $content ) = @_;

  my $token = $C->{account}{token}
   || die "Missing token in ", CONFIG, "\n";

  my $ua = LWP::UserAgent->new;
  my $uri = URI->new_abs( $resource, BASE );

  if ( uc $verb eq 'GET' ) {
    $uri->query_form(
      auth_code => $token,
      %{ $content || {} }
    );
  }
  else {
    die "Need some data to $verb"
     unless $content && 'HASH' eq ref $content;
    $content->{auth_code} = $token;
  }

  my $rq = HTTP::Request->new(
    $verb => $uri,
    [
      'Content-Type' => 'application/json',
      'Accept'       => 'application/json',
    ],
    $content ? ( encode_json $content) : ()
  );
  my $rs = $ua->request( $rq );
  die $rs->status_line unless $rs->is_success;
  return decode_json $rs->content;
}

# vim:ts=2:sw=2:sts=2:et:ft=perl

