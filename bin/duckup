#!/bin/bash

set -e



REPO="duckdb/duckdb"
BIN="duckdb"
BIN_DIR="$HOME/.local/bin"

OS=$( uname -o )

die() {
  echo "$*" >&2
  exit 1
}

[[ $OS = "GNU/Linux" ]] || die "Please use another method on $OS"

DUCKDB="$(which "$BIN" 2> /dev/null || echo)"

if [ "$DUCKDB" ]; then
  CURRENT=$( "$DUCKDB" --init /dev/null --version 2> /dev/null | tail -n 1 | awk '{ print $1 }')
  DIR="$( dirname "$DUCKDB" )"
  if [[ $DIR != $BIN_DIR ]]; then
    echo "Relocating from $DIR to $BIN_DIR"
    mkdir -p "$BIN_DIR"
    mv "$DIR"/duckdb* "$BIN_DIR"
    DIR="$BIN_DIR"
  fi
else
  CURRENT=""
  DIR="$BIN_DIR"
fi


case $(uname -m) in
  "x86_64")
    ARCH="amd64"
    ;;
  "aarch64")
    ARCH="aarch64"
    ;;
  *)
    die "Unknown machine"
    ;;
esac

RELEASE=$( curl -s -L                        \
  -H "Accept: application/vnd.github+json"   \
  "https://api.github.com/repos/$REPO/tags"  \
  | jq -r '.[0].name' )

if [[ $RELEASE == $CURRENT ]]; then
  echo "duckdb $RELEASE is already installed"
  exit
fi

DL="https://github.com/$REPO/releases/download/$RELEASE/duckdb_cli-linux-$ARCH.zip"

WORK_DIR=$( mktemp -d )

cleanup() {
  rm -rf "$WORK_DIR"
}

trap cleanup EXIT

pushd "$WORK_DIR" > /dev/null

echo "Downloading and installing $RELEASE from $DL"
curl -Lo "$BIN.zip" "$DL"
unzip "$BIN.zip"

# Keep the old version
[[ -x $DIR/$BIN ]] && mv "$DIR/$BIN" "$DIR/$BIN-$CURRENT"

# Install the new version
mv "$BIN" "$DIR/$BIN"

popd > /dev/null

# vim:ts=2:sw=2:sts=2:et:ft=sh

