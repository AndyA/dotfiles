#!/usr/bin/env perl

use v5.10;

use autodie;
use strict;
use warnings;

use File::Find;
use Getopt::Long;
use JSON;
use Path::Class;

@ARGV = ('.') unless @ARGV;

use constant USAGE => <<EOT;
Syntax: $0 [options] <dir> ...

Finds all of the GOPROxxxx and GPyyxxxx files in the named directories
and lists them in the correct order.

Use the -r (or -d) options to rename the files in a more friendly style.

Options:
    -h, --help              Display this text
    -r, --rename            Rename files as "GoPro-xxxx-yyyy"
    -d, --dirs              Rename files into dirs "GoPro-xxxx"
    -p, --prefix=<prefix>   Prefix to use instead of "GoPro"
        --ffmpeg            Output ffmpeg "concat" format file
    -n, --dryrun            Don't change anything
EOT

my %O = (
  help   => undef,
  rename => undef,
  dirs   => undef,
  prefix => 'GoPro',
  ffmpeg => undef,
  dryrun => undef,
);

Getopt::Long::Configure("bundling");

GetOptions(
  'h|help'     => \$O{help},
  'r|rename'   => \$O{rename},
  'd|dirs'     => \$O{dirs},
  'p|prefix:s' => \$O{prefix},
  'ffmpeg'     => \$O{ffmpeg},
  'n|dryrun'   => \$O{dryrun},
) or die USAGE;

if ( $O{help} ) {
  say USAGE;
  exit;
}

my $by_dir = {};
find {
  no_chdir => 1,
  wanted   => sub {
    return unless /\b(?:GOPR|GP\d\d)(\d\d\d\d)\.\w+/;
    my ( $seq, $vid ) = ( $1, file $_);
    my $name = $vid->basename;
    return if $name =~ /^\./;
    $name =~ s/\..*//;
    my $dir = $vid->parent;
    push @{ $by_dir->{"$dir"}{$seq}{$name} }, $vid;
  }
}, @ARGV;

if ( $O{rename} || $O{dirs} ) {
  my %idx_for_seq = ();
  with_files(
    $by_dir,
    sub {
      my ( $dir, $seq, $name, @vid ) = @_;
      my $next = ++$idx_for_seq{$seq};
      my $nice = nice_name($seq);
      for my $vid (@vid) {
        my ($ext) = $vid->basename =~ /\.([^.]+)$/;
        my @new_name = ( sprintf "%s-%03d.%s", $nice, $next, lc $ext );
        unshift @new_name, $nice if $O{dirs};

        my $new_vid = file $dir, @new_name;
        say "$vid --> $new_vid";
        unless ( $O{dryrun} ) {
          $new_vid->parent->mkpath;
          rename $vid, $new_vid;
        }
      }
    }
  );
}
else {
  with_files(
    $by_dir,
    sub {
      my ( $dir, $seq, $name, @vid ) = @_;
      if ( $O{ffmpeg} ) {
        say "file '$_'" for sort grep { /\.MP4$/i } @vid;
      }
      else {
        say for sort @vid;
      }
    }
  );
}

sub with_files {
  my ( $by_dir, $cb ) = @_;
  for my $dir ( sort keys %$by_dir ) {
    for my $seq ( sort keys %{ $by_dir->{$dir} } ) {
      for my $name ( sort keys %{ $by_dir->{$dir}{$seq} } ) {
        my $vid = $by_dir->{$dir}{$seq}{$name};
        $cb->( $dir, $seq, $name, @$vid );
      }
    }
  }
}

sub nice_name {
  my $seq = shift;
  return join '-', $O{prefix}, $seq;
}

# vim:ts=2:sw=2:sts=2:et:ft=perl
