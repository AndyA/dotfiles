#!/usr/bin/env perl

use latest;
use Term::ANSIColor;
use Data::Dumper;
use IPC::Run qw( run );

my %ColourMap = (
  green => [
    qr{(\[INFO\]\s+BUILD SUCCESSFUL)},
    qr{((?:Failures|Errors|Skipped):\s+0)},
  ],
  red => [
    qr{(\[ERROR\].*)},
    qr{(\[INFO\]\s+BUILD FAILURE)},
    qr{((?:Failures|Errors):\s+[1-9]\d*)},
    qr{(FAILURE!)},
  ],
  yellow => [
    qr{(\[WARNING\].*)}, qr{(Skipped:\s+[1-9]\d*)},
    qr{(Tests\s+run:\s+0\s+.*)},
  ],
);

run [ 'mvn', @ARGV ], '>', sub { print colourize( @_ ) };

sub colourize {
  my $txt = shift;

  for my $col ( keys %ColourMap ) {
    my $pats = $ColourMap{$col};
    for my $pat ( @$pats ) {
      if ( $txt =~ $pat ) {
        my $pos   = 0;
        my @start = @-;
        my @end   = @+;
        shift @start;
        shift @end;
        my @buf = ();
        while ( defined( my $lim = shift @start ) ) {
          push @buf, colourize( substr $txt, $pos, $lim - $pos );
          $pos = shift @end;
          push @buf, color $col;
          push @buf, substr $txt, $lim, $pos - $lim;
          push @buf, color 'reset';
        }
        push @buf, colourize( substr $txt, $pos );
        return join '', @buf;
      }
    }
  }
  return $txt;
}

# vim:ts=2:sw=2:sts=2:et:ft=perl
