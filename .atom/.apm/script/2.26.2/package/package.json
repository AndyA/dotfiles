{"name":"script","main":"./lib/script","version":"2.26.2","private":false,"description":"Run code in Atom!","author":{"name":"Kyle Kelley","email":"rgbkrk@gmail.com"},"contributors":[{"name":"Kyle Kelley","email":"rgbkrk@gmail.com"},{"name":"Idean Labib","email":"idean1.labib@gmail.com"},{"name":"Christopher Armstrong","email":"radix@twistedmatrix.com"},{"name":"Victor","email":"foo-bar-baz-qux@users.noreply.github.com"},{"name":"Calyhre","email":"calyhre@gmail.com"},{"name":"Kevin Busby","email":"kevinb@earthrid.com"},{"name":"Ahmad M. Zawawi","email":"ahmad.zawawi@gmail.com"},{"name":"Maxime Loliée","email":"maxime@siliadev.com"},{"name":"Jonathan Channon","email":"jonathan.channon@gmail.com"},{"name":"kami","email":"kami30k@gmail.com"},{"name":"Erran Carey","email":"me@errancarey.com"},{"name":"Florian Lefèvre","email":"zedentox@gmail.com"},{"name":"Dustin Blackman","email":"dustinblackman@users.noreply.github.com"},{"name":"elclanrs","email":"cedric.ruiz@spacirdesigns.com"},{"name":"cdingpeng","email":"cdingpeng@glitchsoft.com"},{"name":"gerane","email":"gerane@gmail.com"},{"name":"Jake Sankey","email":"jakesankey@icloud.com"},{"name":"Daniel Bayley","email":"daniel.bayley@me.com"},{"name":"Dan","email":"daniel.bayley@me.com"},{"name":"rgbkrk","email":"rgbkrk@gmail.com"},{"name":"Otto Robba","email":"OttoRobba@users.noreply.github.com"},{"name":"Hikaru Ojima","email":"hikaru.ojima@mixi.co.jp"},{"name":"Rafael Belvederese","email":"rafael@blvz.im"},{"name":"Will Sahatdjian","email":"ws@kindwave.com"},{"name":"Lance Batson","email":"lbatson@my.apsu.edu"},{"name":"Ash Wilson","email":"smashwilson@gmail.com"},{"name":"Pedro Rodriguez","email":"ski.rodriguez@gmail.com"},{"name":"Hans Rødtang","email":"hansrodtang@gmail.com"},{"name":"Yeonghoon Park","email":"sola92@gmail.com"},{"name":"Johan Bruning","email":"johan@taquito.nl"},{"name":"Andy Hayden","email":"andyhayden1@gmail.com"},{"name":"Alexey Slaykovsky","email":"alexey@macbook.dlink"},{"name":"Christian Kjaer Laustsen","email":"christianlaustsen@gmail.com"},{"name":"cormullion","email":"cormullion@mac.com"},{"name":"jbtule","email":"jay+code@tuley.name"},{"name":"Ivan Storck","email":"ivanoats@gmail.com"},{"name":"Ciaran Downey","email":"me@ciarand.me"},{"name":"bryanweatherly","email":"bryanweatherly@gmail.com"},{"name":"Rnhmjoj","email":"micheleguerinirocco@me.com"},{"name":"Calvin Bottoms","email":"calvin.bottoms@gmail.com"},{"name":"Marek Piechut","email":"marek.piechut@gmail.com"},{"name":"Rodolfo Carvalho","email":"rhcarvalho@gmail.com"},{"name":"Sergey Koshelev","email":"xih@yandex.ru"},{"name":"Tomasz Grodzki","email":"dev@plain.pl"},{"name":"fazo96","email":"fazius2009@gmail.com"},{"name":"morinmorin","email":"mimomorin@gmail.com"},{"name":"Mirek Rusin","email":"mirek@me.com"},{"name":"ThiconZ","email":"ThiconZ@users.noreply.github.com"},{"name":"Daniel Chatfield","email":"chatfielddaniel@gmail.com"},{"name":"Lucas Magno","email":"lmagno94@gmail.com"},{"name":"benjamin","email":"benjamin.nave@gmail.com"},{"name":"liamdawson","email":"dawmail333@gmail.com"},{"name":"Liam Dawson","email":"liam@liamdawson.me"},{"name":"Ilya Palkin","email":"ilya1984@ukr.net"},{"name":"Sagi","email":"saginedunkanal@users.noreply.github.com"},{"name":"Michael Pardo","email":"kensuke155@gmail.com"},{"name":"Samuel Marks","email":"samuelmarks@gmail.com"},{"name":"aki","email":"lala.akira@gmail.com"},{"name":"Marc Harter","email":"wavded@gmail.com"},{"name":"wflaschka","email":"wflaschka@gmail.com"},{"name":"Jarmo Kivekas","email":"jarmo.kivekas@nixu.com"}],"repository":{"type":"git","url":"https://github.com/rgbkrk/atom-script"},"keywords":["script","runner","Bash","Behat Feature","Coffeescript","CoffeeScript (Literate)","Cucumber (Gherkin)","Elixir","Erlang","F#","Go","Groovy","Haskell","Javascript","Julia","Lua","mongoDB","newLISP","Perl","PHP","PowerShell","Python","RSpec","Ruby","Ruby on Rails","Scala","Swift","run","Applescript","code"],"license":"Apache 2","engines":{"atom":">=0.174.0"},"activationCommands":{"atom-text-editor":["script:run","script:run-by-line-number","script:run-options"]},"dependencies":{"ansi-to-html":">0.1.0","node-uuid":"~1.4.0","strip-ansi":"^2.0.1","underscore":"~1.5.2","atom-space-pen-views":"^2.0.3"},"devDependencies":{"grunt":"~0.4.5","nodegit":"^0.3.3"},"scripts":{"prepublish":"node utils/updatePackage.js"},"readme":"# Script [![Build Status](http://img.shields.io/travis/rgbkrk/atom-script.svg?style=flat)](https://travis-ci.org/rgbkrk/atom-script)\n**Run code in Atom!**\n\nRun scripts based on file name, a selection of code, or by line number.\n\n![](https://cloud.githubusercontent.com/assets/1694055/3226201/c458acbc-f067-11e3-84a0-da27fe334f5e.gif)\n\nCurrently supported grammars are:\n\n  * AppleScript\n  * Bash\n  * Behat Feature\n  * C <sup>[*](#asterisk)</sup><sup>[‡](#double-dagger)</sup>\n  * C++ <sup>[*](#asterisk)</sup><sup>[‡](#double-dagger)</sup>\n  * C# Script <sup>[*](#asterisk)</sup>\n  * Coffeescript\n  * CoffeeScript (Literate) <sup>[^](#caret)</sup>\n  * Cucumber (Gherkin) <sup>[*](#asterisk)</sup>\n  * D <sup>[*](#asterisk)</sup>\n  * DOT (Graphviz)\n  * Elixir\n  * Erlang <sup>[†](#dagger)</sup>\n  * F# <sup>[*](#asterisk)</sup>\n  * Forth (via GForth)\n  * Go <sup>[*](#asterisk)</sup>\n  * Groovy\n  * Haskell\n  * Java\n  * Javascript\n  * Julia\n  * Kotlin\n  * LilyPond\n  * Lisp (via SBCL) <sup>[⍵](#omega)</sup>\n  * Literate Haskell <sup>[*](#asterisk)</sup>\n  * LiveScript\n  * Lua\n  * Makefile\n  * MoonScript\n  * MongoDB\n  * newLISP\n  * Objective-C <sup>[*](#asterisk)</sup><sup>[‡](#double-dagger)</sup>\n  * Objective-C++ <sup>[*](#asterisk)</sup><sup>[‡](#double-dagger)</sup>\n  * OCaml <sup>[*](#asterisk)</sup>\n  * Perl\n  * Perl 6\n  * PHP\n  * Python\n  * RSpec\n  * Racket\n  * [RANT](https://github.com/TheBerkin/Rant)\n  * Ruby\n  * Ruby on Rails\n  * Rust\n  * Sass/SCSS <sup>[*](#asterisk)</sup>\n  * Scala\n  * Swift\n\n**NOTE**: Some grammars may require you to install [a custom language package](https://atom.io/search?utf8=✓&q=language).\n\nYou only have to add a few lines in a PR to support another.\n\n### Limitations\n\n<a name=\"caret\"></a><sup>^</sup> Running selections of code for CoffeeScript (Literate) only works when selecting just the code blocks\n\n<a name=\"dagger\"></a><sup>†</sup> Erlang uses `erl` for limited selection based runs (see [#70](https://github.com/rgbkrk/atom-script/pull/70))\n\n<a name=\"asterisk\"></a><sup>*</sup> Cucumber (Gherkin), D, Go, F#, Literate Haskell, OCaml, PowerShell, and Swift do not support selection based runs\n\n<a name=\"omega\"></a><sup>⍵</sup> Lisp selection based runs are limited to single line\n\n<a name=\"double-dagger\"></a><sup>‡</sup> C, C++, Objective-C, and Objective-C++ are currently only available for Mac OS X (where `process.platform is 'darwin'`). This is possible due to the commands `xcrun clang` and `xcrun clang++`. **NOTE**: Xcode and the Xcode command line tools are required to ensure `xcrun` and the correct compilers on your system.\n\n## Installation\n\n`apm install script`\n\nor\n\nSearch for `script` within package search in the Settings View.\n\n## Atom can't find node | ruby | python | my socks\n\nMake sure to launch Atom from the console/terminal. This gives atom all your useful environment variables.\n\nIf you *really* wish to open atom from a launcher/icon, see [this issue for a variety of workarounds that have been suggested](https://github.com/rgbkrk/atom-script/issues/61#issuecomment-37337827).\n\n## Usage\n\nMake sure to run `atom` from the command line to get full access to your environment variables. Running Atom from the icon will launch using launchctl's environment.\n\n**Script: Run** will perform a \"File Based\" run when no text is selected (default).\n\n**Script: Run** while text is selected will perform a \"Selection Based\" run executing just the highlighted code.\n\n**Script: Run by Line Number** to run using the specified line number. **Note** that if you select an entire line this number could be off by one due to the way Atom detects numbers while text is selected.\n\n**Script: Run Options** should be used to configure command options, program arguments, and environment variables overrides. Environment variables may be input into the options view in the form `VARIABLE_NAME_ONE=value;VARIABLE_NAME_TWO=\"other value\";VARIABLE_NAME_3='test'`\n\n**Script: Kill Process** will kill the process but leaves the pane open.\n\n**Script: Close View** closes the pane and kills the process.\n\nTo kill everything, click the close icon in the upper right and just go back to\ncoding.\n\n**Script: Copy Run Results** copies everything written to the output pane to the\nclipboard, allowing you to paste it into the editor.\n\n### Command and shortcut reference\n\n| Command                    | Mac OS X                            | Linux/Windows               | Notes                                                                         |\n|----------------------------|-------------------------------------|-----------------------------|-------------------------------------------------------------------------------|\n| Script: Run                | <kbd>cmd-i</kbd>                    | <kbd>shift-ctrl-b</kbd>     | If text is selected a \"Selection Based\" is used instead of a \"File Based\" run |\n| Script: Run by Line Number | <kbd>shift-cmd-j</kbd>              | <kbd>shift-ctrl-j</kbd>     | If text is selected the line number will be the last                          |\n| Script: Run Options        | <kbd>shift-cmd-i</kbd>              | <kbd>shift-ctrl-alt-o</kbd> | Runs the selection or whole file with the given options                       |\n| Script: Close View         | <kbd>esc</kbd> or <kbd>ctrl-w</kbd> | <kbd>esc</kbd>              | Closes the script view window                                                 |\n| Script: Kill Process       | <kbd>ctrl-c</kbd>                   | <kbd>ctrl-q</kbd>           | Kills the current script process                                              |\n\n## Development\n\nUse the atom [contributing guidelines](https://atom.io/docs/latest/contributing).\nThey're pretty sane.\n\n#### Quick and dirty setup\n\n`apm develop script`\n\nThis will clone the `script` repository to `~/github` unless you set the\n`ATOM_REPOS_HOME` environment variable.\n\n#### I already cloned it!\n\nIf you cloned it somewhere else, you'll want to use `apm link --dev` within the\npackage directory, followed by `apm install` to get dependencies.\n\n### Workflow\n\nAfter pulling upstream changes, make sure to run `apm update`.\n\nTo start hacking, make sure to run `atom --dev` from the package directory.\nCut a branch while you're working then either submit a Pull Request when done\nor when you want some feedback!\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/rgbkrk/atom-script/issues"},"homepage":"https://github.com/rgbkrk/atom-script","_id":"script@2.26.2","_shasum":"cac179ced799a12bae35495d4f079ec5b86cdfef","_resolved":"file:../d-11562-4716-9ucdzy/package.tgz","_from":"../d-11562-4716-9ucdzy/package.tgz"}