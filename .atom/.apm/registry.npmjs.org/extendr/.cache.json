{"_id":"extendr","_rev":"7-d7a7c802651f5830db7ea686e0ff7845","name":"extendr","description":"Utilities for cloning, extending, and de-referencing objects in shallow, deep, and safe ways","dist-tags":{"latest":"2.1.0"},"versions":{"2.0.0":{"name":"extendr","version":"2.0.0","description":"Utilities for cloning, extending, and de-referencing objects in shallow, deep, and safe ways","homepage":"https://github.com/bevry/extendr","keywords":["extend","deepExtend","shallowExtend","safeExtend","clone","deepClone","dereference"],"author":{"name":"Bevry Pty Ltd","email":"us@bevry.me","url":"http://bevry.me"},"maintainers":[{"name":"balupton","email":"b@lupton.cc"}],"contributors":[{"name":"Benjamin Lupton","email":"b@lupton.cc","url":"https://github.com/balupton"}],"bugs":{"url":"https://github.com/bevry/extendr/issues"},"repository":{"type":"git","url":"http://github.com/bevry/extendr.git"},"engines":{"node":">=0.4"},"dependencies":{"typechecker":"~2.0.1"},"devDependencies":{"coffee-script":"~1.6.2","joe":"~1.1.2"},"directories":{"lib":"./out/lib"},"scripts":{"test":"node ./out/test/extendr-test.js"},"main":"./out/lib/extendr.js","readme":"# Extendr [![Build Status](https://secure.travis-ci.org/bevry/extendr.png?branch=master)](http://travis-ci.org/bevry/extendr)\nUtilities for cloning, extending, and de-referencing objects in shallow, deep, and safe ways\n\n\n## Install\n\n### Backend\n\n1. [Install Node.js](http://bevry.me/node/install)\n2. `npm install --save extendr`\n\n### Frontend\n\n1. [See Browserify](http://browserify.org)\n\n\n\n## Usage\n\n### Example\n\n``` javascript\n// Shallow Clone\n(function(){\n\tvar a = {a:1}, b = {b:2}\n\tvar c = require('extendr').clone(a,b)\n\tconsole.log(a) // {a:1}\n\tconsole.log(b) // {b:2}\n\tconsole.log(c) // {a:1,b:2}\n})()\n\n// Shallow Extend\n(function(){\n\tvar a = {a:1}, b = {b:2}\n\tvar c = require('extendr').extend(a,b)\n\tconsole.log(a) // {a:1,b:2}\n\tconsole.log(b) // {b:2}\n\tconsole.log(c) // {a:1,b:2}\n})()\n```\n\n### Methods\n\n- `clone(args...)` - shallow extend the arguments into a new object, same as `extend({},args...)`\n- `deepClone(args...)` - deep extend the arguments into a new object, same as `deepExtend({},args...)`\n- `dereference(obj)` - return a copy of the object with all references destroyed, same as serializing then deserializing the object\n- `extend(args...)` - alias for `shallowExtendPlainObjects`\n- `shallowExtendPlainObjects(target, args...)` - shallow extend the arguments into the target\n- `deepExtendPlainObjects(target, args...)` - deep extend the arguments into the target\n- `safeShallowExtendPlainObjects(target, objs...)` - shallow extend defined values from the arguments into the target\n- `safeDeepExtendPlainObjects(target, args...)` - deep extend defined values from the arguments into the target\n\n### Explanation\n\n- Use the clone methods when you don't want to modify your first object\n- Use the extend methods when you want to modify the first argument\n- Use the dereference method when you want to make sure that nothing has any references to the old object\n- Use the safe methods when you don't want `null` and `undefined` values to overwrite a defined values\n\n\n\n## History\nYou can discover the history inside the [History.md](https://github.com/bevry/extendr/blob/master/History.md#files) file\n\n\n\n## License\nLicensed under the incredibly [permissive](http://en.wikipedia.org/wiki/Permissive_free_software_licence) [MIT License](http://creativecommons.org/licenses/MIT/)\n<br/>Copyright © 2013+ [Bevry Pty Ltd](http://bevry.me)\n<br/>Copyright © 2011-2012 [Benjamin Arthur Lupton](http://balupton.com)\n","readmeFilename":"README.md","_id":"extendr@2.0.0","dist":{"shasum":"ffe444d8ad6ff35214cd06d7259c7ffeb6297b97","tarball":"http://registry.npmjs.org/extendr/-/extendr-2.0.0.tgz"},"_from":".","_npmVersion":"1.2.15","_npmUser":{"name":"balupton","email":"b@lupton.cc"}},"2.0.1":{"name":"extendr","version":"2.0.1","description":"Utilities for cloning, extending, and de-referencing objects in shallow, deep, and safe ways","homepage":"https://github.com/bevry/extendr","keywords":["extend","deepExtend","shallowExtend","safeExtend","clone","deepClone","dereference"],"author":{"name":"Bevry Pty Ltd","email":"us@bevry.me","url":"http://bevry.me"},"maintainers":[{"name":"balupton","email":"b@lupton.cc"}],"contributors":[{"name":"Benjamin Lupton","email":"b@lupton.cc","url":"https://github.com/balupton"}],"bugs":{"url":"https://github.com/bevry/extendr/issues"},"repository":{"type":"git","url":"http://github.com/bevry/extendr.git"},"engines":{"node":">=0.4"},"dependencies":{"typechecker":"~2.0.1"},"devDependencies":{"coffee-script":"~1.6.2","joe":"~1.1.2"},"directories":{"lib":"./out/lib"},"scripts":{"test":"node ./out/test/extendr-test.js"},"main":"./out/lib/extendr.js","readme":"# Extendr [![Build Status](https://secure.travis-ci.org/bevry/extendr.png?branch=master)](http://travis-ci.org/bevry/extendr)\nUtilities for cloning, extending, and de-referencing objects in shallow, deep, and safe ways\n\n\n## Install\n\n### Backend\n\n1. [Install Node.js](http://bevry.me/node/install)\n2. `npm install --save extendr`\n\n### Frontend\n\n1. [See Browserify](http://browserify.org)\n\n\n\n## Usage\n\n### Example\n\n``` javascript\n// Shallow Clone\n(function(){\n\tvar a = {a:1}, b = {b:2}\n\tvar c = require('extendr').clone(a,b)\n\tconsole.log(a) // {a:1}\n\tconsole.log(b) // {b:2}\n\tconsole.log(c) // {a:1,b:2}\n})()\n\n// Shallow Extend\n(function(){\n\tvar a = {a:1}, b = {b:2}\n\tvar c = require('extendr').extend(a,b)\n\tconsole.log(a) // {a:1,b:2}\n\tconsole.log(b) // {b:2}\n\tconsole.log(c) // {a:1,b:2}\n})()\n```\n\n### Methods\n\n- `clone(args...)` - shallow extend the arguments into a new object, same as `extend({},args...)`\n- `deepClone(args...)` - deep extend the arguments into a new object, same as `deepExtend({},args...)`\n- `dereference(obj)` - return a copy of the object with all references destroyed, same as serializing then deserializing the object\n- `extend(args...)` - alias for `shallowExtendPlainObjects`\n- `deepExtend(args...)` - alias for `deepExtendPlainObjects`\n- `shallowExtendPlainObjects(target, args...)` - shallow extend the arguments into the target\n- `deepExtendPlainObjects(target, args...)` - deep extend the arguments into the target\n- `safeShallowExtendPlainObjects(target, objs...)` - shallow extend defined values from the arguments into the target\n- `safeDeepExtendPlainObjects(target, args...)` - deep extend defined values from the arguments into the target\n\n### Explanation\n\n- Use the clone methods when you don't want to modify your first object\n- Use the extend methods when you want to modify the first argument\n- Use the dereference method when you want to make sure that nothing has any references to the old object\n- Use the safe methods when you don't want `null` and `undefined` values to overwrite a defined values\n\n\n\n## History\nYou can discover the history inside the [History.md](https://github.com/bevry/extendr/blob/master/History.md#files) file\n\n\n\n## License\nLicensed under the incredibly [permissive](http://en.wikipedia.org/wiki/Permissive_free_software_licence) [MIT License](http://creativecommons.org/licenses/MIT/)\n<br/>Copyright © 2013+ [Bevry Pty Ltd](http://bevry.me)\n<br/>Copyright © 2011-2012 [Benjamin Arthur Lupton](http://balupton.com)\n","readmeFilename":"README.md","_id":"extendr@2.0.1","dist":{"shasum":"d8ab375fcbb833e4ba2cd228540f04e4aa07de90","tarball":"http://registry.npmjs.org/extendr/-/extendr-2.0.1.tgz"},"_from":".","_npmVersion":"1.2.15","_npmUser":{"name":"balupton","email":"b@lupton.cc"}},"2.1.0":{"name":"extendr","version":"2.1.0","description":"Utilities for cloning, extending, and de-referencing objects in shallow, deep, and safe ways","homepage":"https://github.com/bevry/extendr","keywords":["extend","deepExtend","shallowExtend","safeExtend","clone","deepClone","dereference"],"author":{"name":"Bevry Pty Ltd","email":"us@bevry.me","url":"http://bevry.me"},"maintainers":[{"name":"balupton","email":"b@lupton.cc"}],"contributors":[{"name":"Benjamin Lupton","email":"b@lupton.cc","url":"https://github.com/balupton"}],"bugs":{"url":"https://github.com/bevry/extendr/issues"},"repository":{"type":"git","url":"http://github.com/bevry/extendr.git"},"engines":{"node":">=0.4"},"dependencies":{"typechecker":"~2.0.1"},"devDependencies":{"coffee-script":"~1.6.2","joe":"~1.2.0","joe-reporter-console":"~1.2.1","chai":"~1.7.2"},"directories":{"lib":"./out/lib"},"scripts":{"test":"node ./out/test/extendr-test.js"},"main":"./out/lib/extendr.js","readme":"# Extendr\n\n[![Build Status](https://secure.travis-ci.org/bevry/extendr.png?branch=master)](http://travis-ci.org/bevry/extendr)\n[![NPM version](https://badge.fury.io/js/extendr.png)](https://npmjs.org/package/extendr)\n[![Flattr this project](https://raw.github.com/balupton/flattr-buttons/master/badge-89x18.gif)](http://flattr.com/thing/344188/balupton-on-Flattr)\n\nUtilities for cloning, extending, and de-referencing objects in shallow, deep, and safe ways\n\n\n\n## Install\n\n### Backend\n\n1. [Install Node.js](http://bevry.me/node/install)\n2. `npm install --save extendr`\n\n### Frontend\n\n1. [See Browserify](http://browserify.org)\n\n\n\n## Usage\n\n### Example\n\n``` javascript\n// Shallow Clone\n(function(){\n\tvar a = {a:1}, b = {b:2}\n\tvar c = require('extendr').clone(a,b)\n\tconsole.log(a) // {a:1}\n\tconsole.log(b) // {b:2}\n\tconsole.log(c) // {a:1,b:2}\n})()\n\n// Shallow Extend\n(function(){\n\tvar a = {a:1}, b = {b:2}\n\tvar c = require('extendr').extend(a,b)\n\tconsole.log(a) // {a:1,b:2}\n\tconsole.log(b) // {b:2}\n\tconsole.log(c) // {a:1,b:2}\n})()\n```\n\n### Methods\n\n- `clone(args...)` - shallow extend the arguments into a new object, same as `extend({},args...)`\n- `deepClone(args...)` - deep extend the arguments into a new object, same as `deepExtend({},args...)`\n- `dereference(obj)` - return a copy of the object with all references destroyed, same as serializing then deserializing the object\n- `extend(args...)` - alias for `shallowExtendPlainObjects`\n- `deepExtend(args...)` - alias for `deepExtendPlainObjects`\n- `shallowExtendPlainObjects(target, args...)` - shallow extend the arguments into the target\n- `deepExtendPlainObjects(target, args...)` - deep extend the arguments into the target\n- `safeShallowExtendPlainObjects(target, objs...)` - shallow extend defined values from the arguments into the target\n- `safeDeepExtendPlainObjects(target, args...)` - deep extend defined values from the arguments into the target\n\n### Notes\n\n- Use the clone methods when you don't want to modify your first object\n- Use the extend methods when you want to modify the first argument\n- Use the dereference method when you want to make sure that nothing has any references to the old object\n- Use the safe methods when you don't want `null` and `undefined` values to overwrite a defined values\n\n\n\n## History\nYou can discover the history inside the [History.md](https://github.com/bevry/extendr/blob/master/History.md#files) file\n\n\n\n## License\nLicensed under the incredibly [permissive](http://en.wikipedia.org/wiki/Permissive_free_software_licence) [MIT License](http://creativecommons.org/licenses/MIT/)\n<br/>Copyright © 2013+ [Bevry Pty Ltd](http://bevry.me)\n<br/>Copyright © 2011-2012 [Benjamin Arthur Lupton](http://balupton.com)\n","readmeFilename":"README.md","_id":"extendr@2.1.0","dist":{"shasum":"301aa0bbea565f4d2dc8f570f2a22611a8527b56","tarball":"http://registry.npmjs.org/extendr/-/extendr-2.1.0.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"balupton","email":"b@lupton.cc"}}},"readme":"# Extendr [![Build Status](https://secure.travis-ci.org/bevry/extendr.png?branch=master)](http://travis-ci.org/bevry/extendr)\nUtilities for cloning, extending, and de-referencing objects in shallow, deep, and safe ways\n\n\n## Install\n\n### Backend\n\n1. [Install Node.js](http://bevry.me/node/install)\n2. `npm install --save extendr`\n\n### Frontend\n\n1. [See Browserify](http://browserify.org)\n\n\n\n## Usage\n\n### Example\n\n``` javascript\n// Shallow Clone\n(function(){\n\tvar a = {a:1}, b = {b:2}\n\tvar c = require('extendr').clone(a,b)\n\tconsole.log(a) // {a:1}\n\tconsole.log(b) // {b:2}\n\tconsole.log(c) // {a:1,b:2}\n})()\n\n// Shallow Extend\n(function(){\n\tvar a = {a:1}, b = {b:2}\n\tvar c = require('extendr').extend(a,b)\n\tconsole.log(a) // {a:1,b:2}\n\tconsole.log(b) // {b:2}\n\tconsole.log(c) // {a:1,b:2}\n})()\n```\n\n### Methods\n\n- `clone(args...)` - shallow extend the arguments into a new object, same as `extend({},args...)`\n- `deepClone(args...)` - deep extend the arguments into a new object, same as `deepExtend({},args...)`\n- `dereference(obj)` - return a copy of the object with all references destroyed, same as serializing then deserializing the object\n- `extend(args...)` - alias for `shallowExtendPlainObjects`\n- `shallowExtendPlainObjects(target, args...)` - shallow extend the arguments into the target\n- `deepExtendPlainObjects(target, args...)` - deep extend the arguments into the target\n- `safeShallowExtendPlainObjects(target, objs...)` - shallow extend defined values from the arguments into the target\n- `safeDeepExtendPlainObjects(target, args...)` - deep extend defined values from the arguments into the target\n\n### Explanation\n\n- Use the clone methods when you don't want to modify your first object\n- Use the extend methods when you want to modify the first argument\n- Use the dereference method when you want to make sure that nothing has any references to the old object\n- Use the safe methods when you don't want `null` and `undefined` values to overwrite a defined values\n\n\n\n## History\nYou can discover the history inside the [History.md](https://github.com/bevry/extendr/blob/master/History.md#files) file\n\n\n\n## License\nLicensed under the incredibly [permissive](http://en.wikipedia.org/wiki/Permissive_free_software_licence) [MIT License](http://creativecommons.org/licenses/MIT/)\n<br/>Copyright © 2013+ [Bevry Pty Ltd](http://bevry.me)\n<br/>Copyright © 2011-2012 [Benjamin Arthur Lupton](http://balupton.com)\n","maintainers":[{"name":"balupton","email":"b@lupton.cc"}],"time":{"modified":"2013-06-28T22:10:32.485Z","created":"2013-03-28T08:36:23.838Z","2.0.0":"2013-03-28T08:36:49.355Z","2.0.1":"2013-03-28T08:44:44.902Z","2.1.0":"2013-06-28T22:10:32.485Z"},"author":{"name":"Bevry Pty Ltd","email":"us@bevry.me","url":"http://bevry.me"},"repository":{"type":"git","url":"http://github.com/bevry/extendr.git"},"_attachments":{},"_etag":"\"AYXP8UCF8JAGG1NADTXE3YHR4\""}